// Code generated by protoc-gen-go. DO NOT EDIT.
// source: users.proto

/*
Package pb is a generated protocol buffer package.

It is generated from these files:
	users.proto

It has these top-level messages:
	UserProfile
	CreateUserProfileRequest
	GetUserProfileRequest
	DeleteUserProfileRequest
	UpdateUserProfileRequest
	ListUsersProfilesRequest
	ListUsersProfilesResponse
*/
package pb

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/ptypes/empty"
import google_protobuf1 "github.com/golang/protobuf/ptypes/timestamp"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// UserProfile contains the user personal information
type UserProfile struct {
	// Id is the user id which uniquely identify a user
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	// Email is the unique email of the user
	Email string `protobuf:"bytes,2,opt,name=email" json:"email,omitempty"`
	// FirstName is the user first name,it does not have any min length as it can
	// be empty too.
	FirstName string `protobuf:"bytes,3,opt,name=first_name,json=firstName" json:"first_name,omitempty"`
	// LastName is the user last Name , it does not have any min length as it can
	// be empty too.
	LastName string `protobuf:"bytes,4,opt,name=last_name,json=lastName" json:"last_name,omitempty"`
	// BirthDate is the user`s date of birth
	BirthDate *google_protobuf1.Timestamp `protobuf:"bytes,5,opt,name=birth_date,json=birthDate" json:"birth_date,omitempty"`
	// Telephones are the user`s contact numbers and it should be saved with
	// country code.
	Telephones []string `protobuf:"bytes,7,rep,name=telephones" json:"telephones,omitempty"`
}

func (m *UserProfile) Reset()                    { *m = UserProfile{} }
func (m *UserProfile) String() string            { return proto.CompactTextString(m) }
func (*UserProfile) ProtoMessage()               {}
func (*UserProfile) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *UserProfile) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UserProfile) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *UserProfile) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *UserProfile) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *UserProfile) GetBirthDate() *google_protobuf1.Timestamp {
	if m != nil {
		return m.BirthDate
	}
	return nil
}

func (m *UserProfile) GetTelephones() []string {
	if m != nil {
		return m.Telephones
	}
	return nil
}

type CreateUserProfileRequest struct {
	UserProfile *UserProfile `protobuf:"bytes,1,opt,name=user_profile,json=userProfile" json:"user_profile,omitempty"`
}

func (m *CreateUserProfileRequest) Reset()                    { *m = CreateUserProfileRequest{} }
func (m *CreateUserProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateUserProfileRequest) ProtoMessage()               {}
func (*CreateUserProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CreateUserProfileRequest) GetUserProfile() *UserProfile {
	if m != nil {
		return m.UserProfile
	}
	return nil
}

type GetUserProfileRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *GetUserProfileRequest) Reset()                    { *m = GetUserProfileRequest{} }
func (m *GetUserProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*GetUserProfileRequest) ProtoMessage()               {}
func (*GetUserProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GetUserProfileRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteUserProfileRequest struct {
	Id string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
}

func (m *DeleteUserProfileRequest) Reset()                    { *m = DeleteUserProfileRequest{} }
func (m *DeleteUserProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*DeleteUserProfileRequest) ProtoMessage()               {}
func (*DeleteUserProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *DeleteUserProfileRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type UpdateUserProfileRequest struct {
	UserProfile *UserProfile `protobuf:"bytes,1,opt,name=user_profile,json=userProfile" json:"user_profile,omitempty"`
}

func (m *UpdateUserProfileRequest) Reset()                    { *m = UpdateUserProfileRequest{} }
func (m *UpdateUserProfileRequest) String() string            { return proto.CompactTextString(m) }
func (*UpdateUserProfileRequest) ProtoMessage()               {}
func (*UpdateUserProfileRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *UpdateUserProfileRequest) GetUserProfile() *UserProfile {
	if m != nil {
		return m.UserProfile
	}
	return nil
}

type ListUsersProfilesRequest struct {
	Query string `protobuf:"bytes,1,opt,name=query" json:"query,omitempty"`
}

func (m *ListUsersProfilesRequest) Reset()                    { *m = ListUsersProfilesRequest{} }
func (m *ListUsersProfilesRequest) String() string            { return proto.CompactTextString(m) }
func (*ListUsersProfilesRequest) ProtoMessage()               {}
func (*ListUsersProfilesRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ListUsersProfilesRequest) GetQuery() string {
	if m != nil {
		return m.Query
	}
	return ""
}

type ListUsersProfilesResponse struct {
	Profiles []*UserProfile `protobuf:"bytes,1,rep,name=profiles" json:"profiles,omitempty"`
}

func (m *ListUsersProfilesResponse) Reset()                    { *m = ListUsersProfilesResponse{} }
func (m *ListUsersProfilesResponse) String() string            { return proto.CompactTextString(m) }
func (*ListUsersProfilesResponse) ProtoMessage()               {}
func (*ListUsersProfilesResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *ListUsersProfilesResponse) GetProfiles() []*UserProfile {
	if m != nil {
		return m.Profiles
	}
	return nil
}

func init() {
	proto.RegisterType((*UserProfile)(nil), "users.UserProfile")
	proto.RegisterType((*CreateUserProfileRequest)(nil), "users.CreateUserProfileRequest")
	proto.RegisterType((*GetUserProfileRequest)(nil), "users.GetUserProfileRequest")
	proto.RegisterType((*DeleteUserProfileRequest)(nil), "users.DeleteUserProfileRequest")
	proto.RegisterType((*UpdateUserProfileRequest)(nil), "users.UpdateUserProfileRequest")
	proto.RegisterType((*ListUsersProfilesRequest)(nil), "users.ListUsersProfilesRequest")
	proto.RegisterType((*ListUsersProfilesResponse)(nil), "users.ListUsersProfilesResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for UserProfiles service

type UserProfilesClient interface {
	// CreateProfile creates new user profile.
	CreateUserProfile(ctx context.Context, in *CreateUserProfileRequest, opts ...grpc.CallOption) (*UserProfile, error)
	// GetUserProfile returns the user profile by its unique user id.
	GetUserProfile(ctx context.Context, in *GetUserProfileRequest, opts ...grpc.CallOption) (*UserProfile, error)
	// DeleteUserProfile will delete the user profile from the system.
	DeleteUserProfile(ctx context.Context, in *DeleteUserProfileRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error)
	// UpdateUserProfile will update the user profile identified by its user id.
	UpdateUserProfile(ctx context.Context, in *UpdateUserProfileRequest, opts ...grpc.CallOption) (*UserProfile, error)
	ListUsersProfiles(ctx context.Context, in *ListUsersProfilesRequest, opts ...grpc.CallOption) (*ListUsersProfilesResponse, error)
}

type userProfilesClient struct {
	cc *grpc.ClientConn
}

func NewUserProfilesClient(cc *grpc.ClientConn) UserProfilesClient {
	return &userProfilesClient{cc}
}

func (c *userProfilesClient) CreateUserProfile(ctx context.Context, in *CreateUserProfileRequest, opts ...grpc.CallOption) (*UserProfile, error) {
	out := new(UserProfile)
	err := grpc.Invoke(ctx, "/users.UserProfiles/CreateUserProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userProfilesClient) GetUserProfile(ctx context.Context, in *GetUserProfileRequest, opts ...grpc.CallOption) (*UserProfile, error) {
	out := new(UserProfile)
	err := grpc.Invoke(ctx, "/users.UserProfiles/GetUserProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userProfilesClient) DeleteUserProfile(ctx context.Context, in *DeleteUserProfileRequest, opts ...grpc.CallOption) (*google_protobuf.Empty, error) {
	out := new(google_protobuf.Empty)
	err := grpc.Invoke(ctx, "/users.UserProfiles/DeleteUserProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userProfilesClient) UpdateUserProfile(ctx context.Context, in *UpdateUserProfileRequest, opts ...grpc.CallOption) (*UserProfile, error) {
	out := new(UserProfile)
	err := grpc.Invoke(ctx, "/users.UserProfiles/UpdateUserProfile", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *userProfilesClient) ListUsersProfiles(ctx context.Context, in *ListUsersProfilesRequest, opts ...grpc.CallOption) (*ListUsersProfilesResponse, error) {
	out := new(ListUsersProfilesResponse)
	err := grpc.Invoke(ctx, "/users.UserProfiles/ListUsersProfiles", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for UserProfiles service

type UserProfilesServer interface {
	// CreateProfile creates new user profile.
	CreateUserProfile(context.Context, *CreateUserProfileRequest) (*UserProfile, error)
	// GetUserProfile returns the user profile by its unique user id.
	GetUserProfile(context.Context, *GetUserProfileRequest) (*UserProfile, error)
	// DeleteUserProfile will delete the user profile from the system.
	DeleteUserProfile(context.Context, *DeleteUserProfileRequest) (*google_protobuf.Empty, error)
	// UpdateUserProfile will update the user profile identified by its user id.
	UpdateUserProfile(context.Context, *UpdateUserProfileRequest) (*UserProfile, error)
	ListUsersProfiles(context.Context, *ListUsersProfilesRequest) (*ListUsersProfilesResponse, error)
}

func RegisterUserProfilesServer(s *grpc.Server, srv UserProfilesServer) {
	s.RegisterService(&_UserProfiles_serviceDesc, srv)
}

func _UserProfiles_CreateUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateUserProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProfilesServer).CreateUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UserProfiles/CreateUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProfilesServer).CreateUserProfile(ctx, req.(*CreateUserProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserProfiles_GetUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetUserProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProfilesServer).GetUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UserProfiles/GetUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProfilesServer).GetUserProfile(ctx, req.(*GetUserProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserProfiles_DeleteUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteUserProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProfilesServer).DeleteUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UserProfiles/DeleteUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProfilesServer).DeleteUserProfile(ctx, req.(*DeleteUserProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserProfiles_UpdateUserProfile_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateUserProfileRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProfilesServer).UpdateUserProfile(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UserProfiles/UpdateUserProfile",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProfilesServer).UpdateUserProfile(ctx, req.(*UpdateUserProfileRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _UserProfiles_ListUsersProfiles_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListUsersProfilesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(UserProfilesServer).ListUsersProfiles(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/users.UserProfiles/ListUsersProfiles",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(UserProfilesServer).ListUsersProfiles(ctx, req.(*ListUsersProfilesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _UserProfiles_serviceDesc = grpc.ServiceDesc{
	ServiceName: "users.UserProfiles",
	HandlerType: (*UserProfilesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateUserProfile",
			Handler:    _UserProfiles_CreateUserProfile_Handler,
		},
		{
			MethodName: "GetUserProfile",
			Handler:    _UserProfiles_GetUserProfile_Handler,
		},
		{
			MethodName: "DeleteUserProfile",
			Handler:    _UserProfiles_DeleteUserProfile_Handler,
		},
		{
			MethodName: "UpdateUserProfile",
			Handler:    _UserProfiles_UpdateUserProfile_Handler,
		},
		{
			MethodName: "ListUsersProfiles",
			Handler:    _UserProfiles_ListUsersProfiles_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "users.proto",
}

func init() { proto.RegisterFile("users.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 434 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x53, 0x41, 0x6f, 0xd3, 0x30,
	0x18, 0x6d, 0xda, 0x15, 0x96, 0xaf, 0xd3, 0xa4, 0x5a, 0x03, 0x99, 0x0c, 0x58, 0xe4, 0x0b, 0x15,
	0x87, 0x0c, 0x15, 0x71, 0xe0, 0x0a, 0x45, 0x48, 0x80, 0x26, 0x56, 0x31, 0x09, 0x71, 0xa9, 0x5c,
	0xe5, 0xeb, 0x66, 0x29, 0x69, 0x3c, 0xdb, 0x39, 0xec, 0x8f, 0xf0, 0xa3, 0xf8, 0x55, 0x28, 0x76,
	0x12, 0x85, 0x26, 0xbe, 0x71, 0xfc, 0xde, 0x7b, 0x7e, 0x7e, 0xfe, 0x5e, 0x02, 0xb3, 0x52, 0xa3,
	0xd2, 0x89, 0x54, 0x85, 0x29, 0xc8, 0xd4, 0x0e, 0xd1, 0xf9, 0x6d, 0x51, 0xdc, 0x66, 0x78, 0x69,
	0xc1, 0x6d, 0xb9, 0xbb, 0xc4, 0x5c, 0x9a, 0x07, 0xa7, 0x89, 0x2e, 0x0e, 0x49, 0x23, 0x72, 0xd4,
	0x86, 0xe7, 0xd2, 0x09, 0xd8, 0x9f, 0x00, 0x66, 0x37, 0x1a, 0xd5, 0x77, 0x55, 0xec, 0x44, 0x86,
	0xe4, 0x14, 0xc6, 0x22, 0xa5, 0x41, 0x1c, 0x2c, 0xc2, 0xf5, 0x58, 0xa4, 0xe4, 0x0c, 0xa6, 0x98,
	0x73, 0x91, 0xd1, 0xb1, 0x85, 0xdc, 0x40, 0x5e, 0x00, 0xec, 0x84, 0xd2, 0x66, 0xb3, 0xe7, 0x39,
	0xd2, 0x89, 0xa5, 0x42, 0x8b, 0x5c, 0xf1, 0x1c, 0xc9, 0x39, 0x84, 0x19, 0x6f, 0xd8, 0x23, 0xcb,
	0x1e, 0x57, 0x80, 0x25, 0xdf, 0x03, 0x6c, 0x85, 0x32, 0x77, 0x9b, 0x94, 0x1b, 0xa4, 0xd3, 0x38,
	0x58, 0xcc, 0x96, 0x51, 0xe2, 0x72, 0x26, 0x4d, 0xce, 0xe4, 0x47, 0x93, 0x73, 0x1d, 0x5a, 0xf5,
	0x8a, 0x1b, 0x24, 0x2f, 0x01, 0x0c, 0x66, 0x28, 0xef, 0x8a, 0x3d, 0x6a, 0xfa, 0x38, 0x9e, 0x2c,
	0xc2, 0x75, 0x07, 0x61, 0xd7, 0x40, 0x3f, 0x2a, 0xe4, 0x06, 0x3b, 0x2f, 0x5a, 0xe3, 0x7d, 0x89,
	0xda, 0x90, 0x77, 0x70, 0x52, 0xed, 0x6b, 0x23, 0x1d, 0x6c, 0x9f, 0x38, 0x5b, 0x92, 0xc4, 0x6d,
	0xb4, 0x7b, 0xc0, 0x2e, 0xb9, 0x1e, 0xd8, 0x2b, 0x78, 0xf2, 0x19, 0xcd, 0x80, 0xdf, 0xc1, 0xa2,
	0xd8, 0x6b, 0xa0, 0x2b, 0xcc, 0x70, 0xf0, 0xee, 0x43, 0xed, 0x35, 0xd0, 0x1b, 0x99, 0xfe, 0xd7,
	0x9c, 0x6f, 0x80, 0x7e, 0x13, 0xda, 0x06, 0xd5, 0x35, 0xa6, 0x1b, 0xcb, 0x33, 0x98, 0xde, 0x97,
	0xa8, 0x1e, 0xea, 0x04, 0x6e, 0x60, 0x5f, 0xe1, 0xd9, 0xc0, 0x09, 0x2d, 0x8b, 0xbd, 0x46, 0x92,
	0xc0, 0x71, 0x1d, 0x40, 0xd3, 0x20, 0x9e, 0x78, 0x12, 0xb4, 0x9a, 0xe5, 0xef, 0x09, 0x9c, 0x74,
	0x18, 0x4d, 0xbe, 0xc0, 0xbc, 0x57, 0x05, 0xb9, 0xa8, 0x3d, 0x7c, 0x25, 0x45, 0x03, 0x97, 0xb0,
	0x11, 0x59, 0xc1, 0xe9, 0xbf, 0x1d, 0x90, 0xe7, 0xb5, 0x6e, 0xb0, 0x1a, 0x8f, 0xcb, 0x15, 0xcc,
	0x7b, 0x05, 0xb5, 0x89, 0x7c, 0xd5, 0x45, 0x4f, 0x7b, 0x5f, 0xe6, 0xa7, 0xea, 0xf7, 0x62, 0xa3,
	0xea, 0x85, 0xbd, 0x12, 0x5b, 0x3f, 0x5f, 0xbd, 0x9e, 0x6c, 0x3f, 0x61, 0xde, 0xeb, 0xa2, 0xf5,
	0xf2, 0xf5, 0x1a, 0xc5, 0x7e, 0x81, 0xab, 0x91, 0x8d, 0x3e, 0x1c, 0xfd, 0x1a, 0xcb, 0xed, 0xf6,
	0x91, 0x4d, 0xff, 0xf6, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x37, 0x63, 0x9b, 0x87, 0x40, 0x04,
	0x00, 0x00,
}
